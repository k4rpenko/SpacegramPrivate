version: '3.8'
services:
  redis:
    image: "redis:latest"
    container_name: "redis-server"
    ports:
      - "6379:6379"
    command: ["redis-server", "--notify-keyspace-events", "Ex"]
    networks:
      - webnet 

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - webnet 
 
  server:
    image: "server"
    container_name: "aspnet-post"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080:8080" 
      - "8081:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - webnet 

  mediaserver:
    image: "media-server"
    container_name: "aspnet-media"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8082
      - ASPNETCORE_HTTPS_PORTS=8083
    ports:
      - "8082:8082"
      - "8083:8083"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - webnet  

  messagesserver:
    image: "messages-server"
    container_name: "aspnet-messages"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8084
      - ASPNETCORE_HTTPS_PORTS=8085
    ports:
      - "8084:8084"
      - "8085:8085"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - webnet 

  authserver:
    image: "auth-server"
    container_name: "aspnet-auth"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8086
      - ASPNETCORE_HTTPS_PORTS=8087
    ports:
      - "8086:8086"
      - "8087:8087"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - webnet 
      
  userserver:
    image: "user-server"
    container_name: "aspnet-user"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8088
      - ASPNETCORE_HTTPS_PORTS=8089
    ports:
      - "8088:8088"
      - "8089:8089"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - webnet  

  adminserver:
    image: "admin-server"
    container_name: "aspnet-admin"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8091
      - ASPNETCORE_HTTPS_PORTS=8092
    ports:
      - "8091:8091"
      - "8092:8092"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - webnet
  
  springboot-server:
    build:
      context: ../Spring_Server/
      dockerfile: Dockerfile
    container_name: springboot-userSettings
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - webnet

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ../../nginx.conf:/etc/nginx/nginx.conf
    ports:
        - "80:80"
    networks:
      - webnet
 
  ngrok:
    image: wernight/ngrok
    environment:
      - NGROK_AUTHTOKEN=2rrLWd53Wf20sByFFLlUYEIXGn4_2g5ZwzCtcTNcrKouaA1AG
      - NGROK_PORT=nginx:80
    ports:
      - "4040:4040"
    networks:
      - webnet
    depends_on:
      - nginx


  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ZOOKEEPER_CLIENT_PORT=2181
  #     - ZOOKEEPER_TICK_TIME=2000

  # kafka:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_ADVERTISED_LISTENER=PLAINTEXT://localhost:9092
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
  #     - KAFKA_LISTENER_NAME=EXTERNAL
  #     - KAFKA_LISTENER_PORT=9092
  #   depends_on:
  #     - zookeeper

  angular:
    container_name: "Angular"
    build:
      context: ../../Client
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ../../Client:/usr/src/app
      - /usr/src/app/node_modules
    stdin_open: true
    tty: true
    networks:
      - webnet

networks:
  webnet:
    driver: bridge